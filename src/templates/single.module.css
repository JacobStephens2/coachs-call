/* Header area */
/* ------------------------------------------- */
a {
  color: inherit;
}

.listitem {
  margin: 3rem 0;
}

.listitem .article__content {
  margin-top: 1rem;
}

.listitem::after {
  content: "";
  display: block;
  width: 10rem;
  margin: 4rem auto;
  border-bottom: 1px solid black;
}

.topBar {
  height: 71px;
}

/* Hero container */
/* ------------------------------------------- */

.heroContainer {
  position: relative;
}

.video {
  position: relative;
  top: 0;
  left: 0;
  height: 30rem;
  width: 100vw;
  object-fit: cover;
  filter: brightness(50%);
}

.crestContainer {
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: center;
  left: 0;
  right: 0;
  top: 0;
  filter: drop-shadow(3px 3px 11px #fff);
}

.heroHeader {
  color: var(--white);
  width: 80vw;
  position: absolute;
  left: 0;
  top: 230px;
  right: 0;
  bottom: 0;
  display: flex;
  text-align: center;
  align-items: center;
  justify-content: center;
  margin-left: auto;
  margin-right: auto;
  margin-top: 45px;
  text-transform: unset;
  filter: drop-shadow(3px 3px 3px #000);
}

.visionBlock {
  display: none;
}

.visionParagraph {
  display: none;
}

/* Hero container: For desktop views ----------------------------*/
@media (--viewport-wide) {
  .gridOverVideo {
    position: absolute;
    width: 100vw;
    height: 600px;
    top: 90px;
    display: grid;
    grid-template-columns: 5fr 4fr;
    grid-template-rows: 1fr;
    grid-template-areas: "text crest";
  }
  .video {
    height: 90vh;
  }
  .heroText {
    display: grid;
    justify-content: end;
    grid-area: text;
  }
  .heroHeader {
    display: none;
  }
  .crestContainer {
    justify-content: left;
    padding: 0;
    display: grid;
    grid-area: crest;
    align-items: center;
  }
  .crest {
    top: 30px;
    height: 480px;
    width: 500px;
  }
  .visionParagraph {
    display: grid;
    width: 580px;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
    text-align: left;
    align-self: center;
    text-transform: unset;
    filter: drop-shadow(3px 3px 3px #000);
    margin: 0 0 0 0;
  }
  .visionParagraph p {
    color: var(--white);
  }
  .visionParagraph h2 {
    color: var(--white);
  }
  .visionBlockMobile {
    display: none;
  }
  .visionParagraphMobile {
    display: none;
  }
}

/* Below hero area and map */
/* ------------------------------------------- */

.standaloneParagraph {
  margin: 1rem;
  max-width: var(--content-w-narrow);
}

.visionParagraphMobile {
  margin: 1rem;
  max-width: var(--content-w-narrow);
}

.visionBlockMobile {
  display: flex;
  justify-content: center;
}

.centered {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: left;
  color: white;
}

.contentBlock {
  display: flex;
  justify-content: center;
}

.centerText {
  text-align: center;
  margin-top: 1.7rem;
  color: var(--dark-blue);
  margin-bottom: 0;
}

.belowheader {
  padding-top: 84px;
}

/* Front page cards */
/* ------------------------------------------- */

.cardGroup {
  display: flex;
  flex-direction: column;
}

.cardContainer {
  position: relative;
  text-align: center;
  color: var(--white);
  object-fit: cover;
  margin-top: 1rem;
  height: 27rem;
}

.cardImage {
  width: 100vw;
  filter: brightness(50%);
  object-fit: cover;
  height: 27rem;
}

.cardTitle {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: left;
  color: white;
  filter: drop-shadow(3px 3px 3px #000);
}

.cardText {
  display: none;
}

/* For desktop views --------------------- */

@media (--viewport-wide) {
  .cardContainer {
    margin: 1rem 0.5rem 0;
    display: grid;
    width: 100vw;
    grid-template-columns: 50vw 1fr;
    grid-template-rows: 1fr;
    grid-template-areas: "left right";
    height: 75vh;
  }
  .cardContainer:first-child {
    margin-left: 0;
  }
  .cardContainer:last-child {
    margin-right: 0;
  }
  .cardGroup {
    display: block;
    width: 100vw;
  }
  .cardImage {
    width: initial;
    width: 100vw;
    height: 75vh;
  }
  .cardLeft {
    grid-area: left;
    display: grid;
  }
  p.cardLeft {
    left: 60%;
    width: 100%;
    padding-left: 15vw;
  }
  .cardRight {
    grid-area: right;
  }
  p.cardRight {
    left: 25%;
  }
  h2.cardLeft {
    left: 55%;
  }
  h2.cardRight {
    left: 35%;
  }
  .cardText {
    display: inherit;
  }
}
